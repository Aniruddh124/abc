# Import necessary libraries
import tensorflow as tf
import tensorflow_quantum as tfq
import cirq
import sympy
import numpy as np

# Visualization tools
%matplotlib inline
import matplotlib.pyplot as plt
from cirq.contrib.svg import SVGCircuit

# Define a qubit
qubit = cirq.GridQubit(0, 0)

# Define some circuits
circuit1 = cirq.Circuit(cirq.X(qubit))
circuit2 = cirq.Circuit(cirq.H(qubit))

# Convert to a tensor
input_circuit_tensor = tfq.convert_to_tensor([circuit1, circuit2])

# Define a circuit that we want to append
y_circuit = cirq.Circuit(cirq.Y(qubit))

# Instantiate our layer
y_appender = tfq.layers.AddCircuit()

# Run our circuit tensor through the layer and save the output
output_circuit_tensor = y_appender(input_circuit_tensor, append=y_circuit)

# Examine the input tensor
print(tfq.from_tensor(input_circuit_tensor))

# And examine the output tensor
print(tfq.from_tensor(output_circuit_tensor))
